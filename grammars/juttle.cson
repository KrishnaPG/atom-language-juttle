'scopeName': 'juttle'
'fileTypes': [
  'juttle'
]
'name': 'Juttle'
'patterns': [
  {
    'begin': '\\b(?:(export)(?:\\s+))?(function\\*?)\\s*((\\*)|(?:(?:\\s+)(\\*?[a-zA-Z_$][\\w$]*)))?\\s*(\\()'
    'beginCaptures':
      '1':
        'name': 'storage.modifier.juttle'
      '2':
        'name': 'storage.type.function.juttle'
      '4':
        'name': 'storage.type.function.juttle'
      '5':
        'name': 'entity.name.function.juttle'
      '6':
        'name': 'punctuation.definition.parameters.begin.juttle'
    'comment': 'match regular function like: function myFunc(arg) { … }'
    'end': '(\\))'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.parameters.end.juttle'
    'name': 'meta.function.juttle'
    'patterns': [
      {
        'include': '#function-params'
      }
    ]
  }
  {
    'include': '#methods'
  }
  {
    'include': '#object_variable'
  }
  {
    'include': '#numbers'
  }
  {
    'include': '#strings'
  }
  {
    'include': '#comments'
  }
  {
    'match': '(?<!\\.)\\b(function|reducer|sub)(?!\\s*:)\\b'
    'name': 'storage.type.juttle'
  }
  {
    'match': '(?<!\\.)\\b(export)(?!\\s*:)\\b'
    'name': 'storage.modifier.juttle'
  }
  {
    'match': '(?<!\\.)\\b(const|var)(?!\\s*:)\\b'
    'name': 'storage.type.var.juttle'
  }
  {
    'match': '(?<!\\.)\\b(as|else|if|import|from|return)(?!\\s*:)\\b'
    'name': 'keyword.control.juttle'
  }
  {
    'match': '(?<!\\.)\\b(in)(?!\\s*:)\\b'
    'name': 'keyword.operator.$1.juttle'
  }
  {
    'match': '(?<!\\.)\\b(true|false)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)(true|false)(?=\\s*:)'
    'captures':
      '1':
        'name': 'constant.language.boolean.$1.juttle'
      '2':
        'name': 'constant.language.boolean.$2.juttle'
  }
  {
    'match': '(?<!\\.)\\b(null)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)(null)(?=\\s*:)'
    'captures':
      '1':
        'name': 'constant.language.null.juttle'
      '2':
        'name': 'constant.language.null.juttle'
  }
  {
    'match': '(?<!\\.)\\b([A-Z][A-Z0-9_]+)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)([A-Z][A-Z0-9_]+)(?=\\s*:)'
    'captures':
      '1':
        'name': 'constant.other.juttle'
      '2':
        'name': 'constant.other.juttle'
  }
  {
    'match': '(?<!\\$)\\b(Array|Boolean|Date|Math|Number|RegExp|String)\\b'
    'name': 'support.class.juttle'
  }
  {
    'match': '\\b(Infinity|NaN|undefined)\\b'
    'name': 'constant.language.juttle'
  }
  {
    'begin': '(?<=[\\[=(?:+,!]|^|return|&&|\\|\\|)\\s*(/)(?![/*+{}?])(?=.*/)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.string.begin.juttle'
    'end': '(/)[gimuy]*'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.string.end.juttle'
    'name': 'string.regexp.juttle'
    'patterns': [
      {
        'include': 'source.juttle.regexp'
      }
    ]
  }
  {
    'include': '#operators'
  }
  {
    'include': '#method_call'
  }
  {
    'include': '#function_call'
  }
  {
    'include': '#properties'
  }
  {
    'match': '\\;'
    'name': 'punctuation.terminator.statement.juttle'
  }
  {
    'match': ','
    'name': 'meta.delimiter.object.comma.juttle'
  }
  {
    'match': '\\.'
    'name': 'meta.delimiter.method.period.juttle'
  }
  {
    'captures':
      '1':
        'name': 'punctuation.section.scope.begin.juttle'
      '2':
        'name': 'punctuation.section.scope.end.juttle'
    'comment': 'Allows the special return snippet to fire.'
    'match': '({)(})'
  }
  {
    'match': '{|}'
    'name': 'meta.brace.curly.juttle'
  }
  {
    'match': '\\(|\\)'
    'name': 'meta.brace.round.juttle'
  }
  {
    'match': '\\[|\\]'
    'name': 'meta.brace.square.juttle'
  }
  {
    'match': '\\b(batch|emit|filter|head|input|join|keep|pace|pass|sequence|put|read|reduce|remove|skip|sort|split|tail|unbatch|uniq|view|write)\\b'
    'name': 'support.function.juttle'
  }
]
'repository':
  'numbers':
    'patterns': [
      {
        'match': '\\b(?<!\\$|_)((0(x|X)[0-9a-fA-F]+)|(0(b|B)[01]+)|(0(o|O)[0-7]+)|([0-9]+(\\.[0-9]+)?)((e|E)[+-]?[0-9]+)?)\\b'
        'name': 'constant.numeric.juttle'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '%=|\\+=|-=|\\*=|(?<!\\()/='
        'name': 'keyword.operator.assignment.compound.juttle'
      }
      {
        'match': '&=|\\^=|<<=|>>=|>>>=|\\|='
        'name': 'keyword.operator.assignment.compound.bitwise.juttle'
      }
      {
        'match': '!==|!=|<=|>=|===|==|<|>'
        'name': 'keyword.operator.comparison.juttle'
      }
      {
        'match': '&&|!|\\|\\|'
        'name': 'keyword.operator.logical.juttle'
      }
      {
        'match': '&|\\||\\^|~'
        'name': 'keyword.operator.bitwise.juttle'
      }
      {
        'match': '\\?|:'
        'name': 'keyword.operator.juttle'
      }
      {
        'match': '='
        'name': 'keyword.operator.assignment.juttle'
      }
      {
        'match': '--'
        'name': 'keyword.operator.decrement.juttle'
      }
      {
        'match': '\\+\\+'
        'name': 'keyword.operator.increment.juttle'
      }
      {
        'match': '%|\\*|/|-|\\+'
        'name': 'keyword.operator.juttle'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.juttle'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.juttle'
        'name': 'string.quoted.single.juttle'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.juttle'
          }
          {
            'match': "[^']*[^\\n\\r'\\\\]$"
            'name': 'invalid.illegal.string.juttle'
          }
        ]
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.juttle'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.juttle'
        'name': 'string.quoted.double.juttle'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.juttle'
          }
          {
            'match': '[^"]*[^\\n\\r"\\\\]$'
            'name': 'invalid.illegal.string.juttle'
          }
        ]
      }
    ]
  'methods':
    'patterns': [
      {
        'name': 'meta.method.juttle'
        'comment': 'match regular function like: function myFunc(arg) { … }'
        'begin': '\\b((?!(?:else|if|return)[\\s\\(])(?:[a-zA-Z_$][a-zA-Z_$0-9]*))\\s*(\\()(?=(?:[^\\(\\)]*)?\\)\\s*\\{)'
        'beginCaptures':
          '1':
            'name': 'entity.name.function.juttle'
          '2':
            'name': 'punctuation.definition.parameters.begin.juttle'
        'end': '(\\))'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.parameters.end.juttle'
        'patterns': [
          {
            'include': '#function-params'
          }
          {
            'include': '#strings'
          }
        ]
      }
    ]
  'function-params':
    'patterns': [
      {
        'include': '#numbers'
      }
      {
        'include': '#strings'
      }
      {
        'match': '\\(|\\)'
        'name': 'meta.brace.round.juttle'
      }
      {
        'match': '\\[|\\]'
        'name': 'meta.brace.square.juttle'
      }
      {
        'match': '{|}'
        'name': 'meta.brace.curly.juttle'
      }
      {
        'match': ','
        'name': 'meta.object.delimiter.juttle'
      }
      {
        'match': '='
        'name': 'keyword.operator.assignment.juttle'
      }
      {
        'include': '#comments'
      }
      {
        'match': '[a-zA-Z_$][a-zA-Z_$0-9]*'
        'name': 'variable.parameter.function.juttle'
      }
    ]
  'arguments':
    'patterns': [
      {
        'include': '$self'
      }
    ]
  'method_call':
    'patterns': [
      {
        'comment': '.methodCall(arg1, "arg2", [...])'
        'begin': '(\\.)([a-zA-Z_$][\\w$]*)\\s*(\\()'
        'beginCaptures':
          '1':
            'name': 'meta.delimiter.method.period.juttle'
          '2':
            'name': 'entity.name.function.juttle'
          '3':
            'name': 'punctuation.definition.arguments.begin.juttle'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.arguments.end.juttle'
        'name': 'meta.method-call.juttle'
        'patterns': [
          {
            'include': '#arguments'
          }
        ]
      }
    ]
  'function_call':
    'patterns': [
      {
        'comment': 'functionCall(arg1, "arg2", [...])'
        'begin': '(?:(\\d\\w*)|([a-zA-Z_$][\\w$]*))\\s*(\\()'
        'beginCaptures':
          '1':
            'name': 'invalid.illegal.identifier.juttle'
          '2':
            'name': 'entity.name.function.juttle'
          '3':
            'name': 'punctuation.definition.arguments.begin.juttle'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.arguments.end.juttle'
        'name': 'meta.function-call.juttle'
        'patterns': [
          {
            'include': '#arguments'
          }
        ]
      }
    ]
  'object_variable':
    'patterns': [
      {
        'comment': '`obj` in `obj.prop`, `obj.methodCall()`'
        'match': '(?:([a-zA-Z_$][\\w$]*)|(\\d\\w*))(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)'
        'captures':
          '1':
            'name': 'variable.other.object.juttle'
          '2':
            'name': 'invalid.illegal.identifier.juttle'
      }
    ]
  'properties':
    'patterns': [
      {
        'comment': '`prop` in `obj.prop`, `func().prop`'
        'match': '(\\.)\\s*(?:(\\b\\d\\w*)|([A-Z][A-Z0-9_$]*\\b\\$*)|([\\w$]*))'
        'captures':
          '1':
            'name': 'meta.delimiter.property.period.juttle'
          '2':
            'name': 'invalid.illegal.identifier.juttle'
          '3':
            'name': 'constant.other.property.juttle'
          '4':
            'name': 'variable.other.property.juttle'
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '/\\*'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.juttle'
        'end': '\\*/'
        'name': 'comment.block.juttle'
      }
      {
        'begin': '(^[ \\t]+)?(?=//)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.juttle'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '//'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.juttle'
            'end': '\\n'
            'name': 'comment.line.double-slash.juttle'
          }
        ]
      }
    ]
